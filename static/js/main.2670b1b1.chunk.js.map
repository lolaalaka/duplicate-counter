{"version":3,"sources":["firebase.js","context/index.js","components/currentlist.js","components/duplicates.js","components/copy.js","components/input.js","components/heading.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Context","createContext","useProvider","useContext","ContextProvider","children","useState","values","setValues","useEffect","collection","onSnapshot","snap","temp","docs","forEach","doc","push","data","id","Provider","value","Currentlist","currentList","className","map","item","index","selection","onClick","delete","then","alert","catch","error","Duplicates","console","log","groupBy","Object","entries","filter","entry","i","ticket","Copy","currentTicket","setCurrentTicket","setCurrentList","duplicateActive","setDuplicatesActive","Set","Input","onSubmit","e","preventDefault","formData","FormData","target","fromEntries","add","reset","type","name","placeholder","htmlFor","list","x","Heading","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGKA,IAASC,KAAKC,QACjBF,IAASG,cAAc,CACrBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIZ,IAAMC,EAAYX,IAASW,Y,OCb5BC,EAAUC,0BAyBHC,EAAc,WACzB,OAAOC,qBAAWH,IAGLI,EA3BS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,mBAAS,IADG,mBACjCC,EADiC,KACzBC,EADyB,KAoBxC,OARAC,qBAAU,WACRV,EAAUW,WAAW,WAAWC,YAAW,SAACC,GAC1C,IAAIC,EAAO,GACXD,EAAKE,KAAKC,SAAQ,SAACC,GAAD,OAASH,EAAKI,KAAL,2BAAeD,EAAIE,QAAnB,IAA2BC,GAAIH,EAAIG,SAC9DX,EAAUK,QAEX,IAEI,cAACb,EAAQoB,SAAT,CAAkBC,MAAOd,EAAzB,SAAkCF,KCS5BiB,EA/BK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAerB,OACE,qBAAKC,UAAU,YAAf,SACGD,GACCA,EAAYE,KAAI,SAACC,EAAMC,GAAP,OACd,sBAAKH,UAAU,OAAf,UACE,4BAAIE,EAAKE,YACT,yBAAQC,QAAS,kBApBLV,EAoBwBO,EAAKP,QAlBjDpB,EACGW,WAAW,WACXM,IAAIG,GACJW,SACAC,MAAK,WACJC,MAAM,qCAEPC,OAAM,SAACC,GACNF,MAAM,4BAA6BE,MAVpB,IAACf,GAoBZ,UACG,IACD,mBAAGK,UAAU,gCAJUG,S,QCiCtBQ,EAnDI,WACjB,IAcM5B,EAASL,IAIf,OAFAkC,QAAQC,IAAIC,kBAAQ/B,EAAQ,cAG1B,8BACGA,GACC,8BACGgC,OAAOC,QAAQF,kBAAQ/B,EAAQ,cAC7BkC,QAAO,SAACC,GAAD,OAAWA,EAAM,GAAGpD,OAAS,KACpCmC,KAAI,SAACiB,EAAOC,GAAR,OACH,gCACE,qBAAKnB,UAAU,YAAf,SACE,mCACIkB,EAAM,GADV,KACgB,UADhB,IAC4BA,EAAM,GAAGpD,OADrC,IAC8C,WAI/CoD,EAAM,GAAGjB,KAAI,SAACC,GAAD,OACZ,sBAAKF,UAAU,mBAAf,UAEE,mDACA,mCAAME,EAAKkB,OAAX,OACA,wBAAQf,QAAS,kBArCbV,EAqCgCO,EAAKP,QAnCzDpB,EACGW,WAAW,WACXM,IAAIG,GACJW,SACAC,MAAK,WACJC,MAAM,qCAEPC,OAAM,SAACC,GACNF,MAAM,4BAA6BE,MAVpB,IAACf,GAqCJ,SACE,mBAAGK,UAAU,+BALsBE,EAAKP,SARtCwB,WCmCTE,EA3DF,WACX,IAAMtC,EAASL,IADE,EAGyBI,qBAHzB,mBAGVwC,EAHU,KAGKC,EAHL,OAIqBzC,qBAJrB,mBAIViB,EAJU,KAIGyB,EAJH,OAK8B1C,oBAAS,GALvC,mBAKV2C,EALU,KAKOC,EALP,KAOjBzC,qBAAU,WACJqC,GACFE,EAAezC,EAAOkC,QAAO,SAACf,GAAD,OAAUA,EAAKkB,SAAWE,QAExD,CAACA,EAAevC,IAMnB,OACE,qCACE,sBAAKiB,UAAU,mBAAf,UACG,YAAI,IAAI2B,IAAI5C,EAAOkB,KAAI,SAACC,GAAD,OAAUA,EAAKkB,YAAUnB,KAAI,SAACC,EAAMC,GAAP,OACnD,yBAEEH,UAAU,gBACVK,QAAS,WACPkB,EAAiBrB,GACjBwB,GAAoB,IALxB,UAQE,mBACE1B,UAAS,mCACPsB,IAAkBpB,EAAO,sBAAwB,QAGrD,oBAAGF,UAAU,aAAb,cAA4BE,OAZvBC,MAeT,yBACEH,UAAS,wBACa,IAApByB,EAA2B,mBAAqB,MAElDpB,QA5BiB,WACvBqB,GAAoB,IAuBhB,UAME,mBAAG1B,UAAU,iBACb,mBAAGA,UAAU,qBAAb,uCAMHyB,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CAAa1B,YAAaA,QCZnB6B,EA3CD,WACZ,IAAM7C,EAASL,IAaf,OACE,uBAAMmD,SAZY,SAACC,GACnBA,EAAEC,iBACF,IAAMC,EAAW,IAAIC,SAASH,EAAEI,QAC1BxC,EAAOqB,OAAOoB,YAAYH,GAEhCzD,EACGW,WAAW,WACXkD,IAAI1C,GACJa,MAAK,SAACZ,GAAD,OAAQmC,EAAEI,OAAOG,YAIzB,UACE,uBACEC,KAAK,OACLC,KAAK,YACLC,YAAY,0BACZxC,UAAU,aACT,IACH,uBAAOyC,QAAQ,SACf,uBACEC,KAAK,QACLH,KAAK,SACL5C,GAAG,OACHK,UAAU,eACVwC,YAAY,yBAEd,0BAAU7C,GAAG,QAAb,SACG,YAAI,IAAIgC,IAAI5C,EAAOkB,KAAI,SAAC0C,GAAD,OAAOA,EAAEvB,YAAUnB,KAAI,SAACC,EAAMC,GAAP,OAC7C,uCAAsBD,EAAtB,MAAaC,QAEL,IACZ,yBAAQmC,KAAK,SAAStC,UAAU,YAAhC,UACG,IACD,mBAAGA,UAAU,oCC7BN4C,EAXC,WACd,OACE,8BACE,mBAAG5C,UAAU,KAAb,sHCeS6C,MAZf,WACE,OACE,qBAAK7C,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCAO8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2670b1b1.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp({\r\n    apiKey: \"AIzaSyDIwJwZ-BizHRBFSx3-IvD8Oxxx-7-yNd4\",\r\n    authDomain: \"duplicates-232a8.firebaseapp.com\",\r\n    projectId: \"duplicates-232a8\",\r\n    storageBucket: \"duplicates-232a8.appspot.com\",\r\n    messagingSenderId: \"714870414099\",\r\n    appId: \"1:714870414099:web:6721ee70fb58c15fffd8e6\",\r\n    measurementId: \"G-5CCWKBMR96\",\r\n  });\r\n}\r\n\r\nexport const firestore = firebase.firestore();\r\n","import { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { firestore } from \"../firebase\";\r\nconst Context = createContext();\r\n\r\nconst ContextProvider = ({ children }) => {\r\n  const [values, setValues] = useState([]);\r\n\r\n  // console.log(values);\r\n\r\n  // const see = values.filter((v, i) => {\r\n  //   //return values.map((item) => item.selection).indexOf(v.selection) != i;\r\n  //   return values.map((item) => item.selection);\r\n  // });\r\n\r\n  //console.log(see);\r\n\r\n  useEffect(() => {\r\n    firestore.collection(\"tickets\").onSnapshot((snap) => {\r\n      let temp = [];\r\n      snap.docs.forEach((doc) => temp.push({ ...doc.data(), id: doc.id }));\r\n      setValues(temp);\r\n    });\r\n  }, []);\r\n\r\n  return <Context.Provider value={values}>{children}</Context.Provider>;\r\n};\r\n\r\nexport const useProvider = () => {\r\n  return useContext(Context);\r\n};\r\n\r\nexport default ContextProvider;\r\n","import { firestore } from \"../firebase\";\r\n\r\nconst Currentlist = ({ currentList }) => {\r\n  const handleDelete = (id) => {\r\n    //e.preventDefault();\r\n    firestore\r\n      .collection(\"tickets\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => {\r\n        alert(\"Document successfully deleted!\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {currentList &&\r\n        currentList.map((item, index) => (\r\n          <div className=\"copy\" key={index}>\r\n            <p>{item.selection}</p>\r\n            <button onClick={() => handleDelete(item.id)}>\r\n              {\" \"}\r\n              <i className=\"fas fa-trash trash-btn\"></i>\r\n            </button>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Currentlist;\r\n","import { useProvider } from \"../context\";\r\nimport { groupBy } from \"lodash\";\r\nimport { firestore } from \"../firebase\";\r\nconst Duplicates = () => {\r\n  const handleDelete = (id) => {\r\n    //e.preventDefault();\r\n    firestore\r\n      .collection(\"tickets\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => {\r\n        alert(\"Document successfully deleted!\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Error removing document: \", error);\r\n      });\r\n  };\r\n\r\n  const values = useProvider();\r\n\r\n  console.log(groupBy(values, \"selection\"));\r\n\r\n  return (\r\n    <div>\r\n      {values && (\r\n        <div>\r\n          {Object.entries(groupBy(values, \"selection\"))\r\n            .filter((entry) => entry[1].length > 1)\r\n            .map((entry, i) => (\r\n              <div key={i}>\r\n                <div className=\"duplicate\">\r\n                  <h3>\r\n                    \"{entry[0]}\" {\"appears\"} {entry[1].length} {\"x :\"}\r\n                  </h3>\r\n                </div>\r\n\r\n                {entry[1].map((item) => (\r\n                  <div className=\"duplicatecounter\" key={item.id}>\r\n                    {/* <span>{item.selection}</span> */}\r\n                    <span> in the folder </span>\r\n                    <h4>\"{item.ticket}\"</h4>\r\n                    <button onClick={() => handleDelete(item.id)}>\r\n                      <i className=\"fas fa-trash trash-btn\"></i>\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Duplicates;\r\n","import { useProvider } from \"../context\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Currentlist from \"./currentlist\";\r\nimport Duplicates from \"./duplicates\";\r\n\r\nconst Copy = () => {\r\n  const values = useProvider();\r\n  //console.log(inputVariable);\r\n  const [currentTicket, setCurrentTicket] = useState();\r\n  const [currentList, setCurrentList] = useState();\r\n  const [duplicateActive, setDuplicatesActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentTicket) {\r\n      setCurrentList(values.filter((item) => item.ticket === currentTicket));\r\n    }\r\n  }, [currentTicket, values]);\r\n\r\n  const handleDuplicates = () => {\r\n    setDuplicatesActive(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"folder-container\">\r\n        {[...new Set(values.map((item) => item.ticket))].map((item, index) => (\r\n          <button\r\n            key={index}\r\n            className=\"folderandtext\"\r\n            onClick={() => {\r\n              setCurrentTicket(item);\r\n              setDuplicatesActive(false);\r\n            }}\r\n          >\r\n            <i\r\n              className={`fas fa-folder foldericon ${\r\n                currentTicket === item ? \"fas fa-folder-open \" : null\r\n              }`}\r\n            ></i>\r\n            <p className=\"foldertext\"> {item}</p>\r\n          </button>\r\n        ))}\r\n        <button\r\n          className={`analysis-btn ${\r\n            duplicateActive === true ? \"analysis-btnopen\" : null\r\n          }`}\r\n          onClick={handleDuplicates}\r\n        >\r\n          <i className=\"fas fa-clone\"></i>\r\n          <p className=\"replicateparagraph\">see duplicates here</p>\r\n        </button>\r\n      </div>\r\n\r\n      {/* currentlist and duplicates are imported */}\r\n\r\n      {duplicateActive ? (\r\n        <Duplicates />\r\n      ) : (\r\n        <Currentlist currentList={currentList} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Copy;\r\n","import { useProvider } from \"../context\";\r\nimport { firestore } from \"../firebase\";\r\n\r\nconst Input = () => {\r\n  const values = useProvider(\"\");\r\n\r\n  const submitEntry = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData);\r\n\r\n    firestore\r\n      .collection(\"tickets\")\r\n      .add(data)\r\n      .then((id) => e.target.reset());\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitEntry}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"selection\"\r\n        placeholder=\"type in your selections\"\r\n        className=\"inputbox\"\r\n      />{\" \"}\r\n      <label htmlFor=\"item\"></label>\r\n      <input\r\n        list=\"items\"\r\n        name=\"ticket\"\r\n        id=\"item\"\r\n        className=\"datalist-box\"\r\n        placeholder=\"create unique folder\"\r\n      />\r\n      <datalist id=\"items\">\r\n        {[...new Set(values.map((x) => x.ticket))].map((item, index) => (\r\n          <option key={index}> {item} </option>\r\n        ))}\r\n      </datalist>{\" \"}\r\n      <button type=\"submit\" className=\" plus-btn\">\r\n        {\" \"}\r\n        <i className=\"fas fa-arrow-circle-down\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","const Heading = () => {\r\n  return (\r\n    <div>\r\n      <p className=\"nb\">\r\n        *create a uniquely named folder to store your selections, a folder name\r\n        cannot appear more than once*\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n","import \"./App.css\";\nimport Copy from \"./components/copy\";\nimport Input from \"./components/input\";\nimport ContextProvider from \"./context\";\nimport Heading from \"./components/heading\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ContextProvider>\n        <Heading />\n        <Input />\n        <Copy />\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}